{"version":3,"sources":["utils/Constants.js","utils/APIUtils.js","app/AppContext.js","user/login/Login.js","common/LoadingIndicator.js","common/NotFound.js","common/ServerError.js","user/profile/Profile.js","common/Header.js","game/Tag.js","game/Vote.js","game/Review.js","game/Paragraph.js","game/Fragment.js","game/VirtualEdition.js","game/Game.js","game/GameLeaderboard.js","common/PrivateRoute.js","common/About.js","common/Feedback.js","app/App.js","index.js"],"names":["API_BASE_URL","WEB_SOCKETS_URL","SUBSCRIBE_URL","LDOD_MESSAGE","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","ok","json","Promise","reject","getCurrentUser","token","JSON","parse","atob","split","date","Date","setUTCSeconds","exp","removeItem","method","Context","React","createContext","Provider","Consumer","AppContext","props","value","this","state","children","Component","FormItem","Item","Login","AntWrappedLoginForm","create","LoginForm","className","onLogin","handleSubmit","bind","event","preventDefault","form","validateFields","err","values","loginRequest","body","stringify","login","setItem","accessToken","catch","error","status","notification","message","description","getFieldDecorator","onSubmit","rules","required","prefix","Glyphicon","glyph","size","name","placeholder","type","LoadingIndicator","antIcon","style","fontSize","spin","indicator","display","textAlign","marginTop","NotFound","Grid","fluid","Jumbotron","backgroundColor","Button","bsStyle","componentClass","Link","to","ServerError","Profile","user","isLoading","notFound","publicVEs","loadUserProfile","getUserPublicVirtualEditions","username","setState","getUserProfile","serverError","getPublicVirtualEditions4User","match","params","nextProps","Row","Col","mdOffset","md","lgOffset","lg","firstName","lastName","ListGroup","map","publicVE","index","key","ListGroupItem","title","href","HeaderNavigation","menuItems","currentUser","Navbar","Collapse","Nav","pullRight","NavItem","eventKey","NavDropdown","id","MenuItem","onClick","onLogout","default","collapseOnSelect","Header","Brand","Toggle","withRouter","Tag","handleTag","e","target","input","length","validate","sendMessage","reset","tags","msg","clientRef","gameId","authorId","userId","vote","paragraph","disabled","getValidationState","socket","topics","ref","client","onMessage","handleMessageTag","tagViews","forEach","m","mIndex","push","color","xs","autoComplete","FormGroup","validationState","InputGroup","FormControl","spellCheck","onChange","handleChange","autoFocus","Feedback","Table","Vote","number","round","limit","voterId","param","tag","previousVotedTag","votes","handleMessageVote","initialTags","seconds","topTag","winner","interval","setInterval","tick","clearInterval","prevProps","prevState","dictionary","copy","Math","parseFloat","temp","i","splice","top","voteViews","hasEnded","userSuggestedTags","ReactCountdownClock","require","Review","handleMessageReview","getFinalTags","onConnect","res","tagAndWinner","pop","keys","endFragment","Alert","alignItems","justifyContent","paddingBottom","showMilliseconds","onComplete","finishGame","steps","fontFamily","dashed","dangerouslySetInnerHTML","__html","fullText","Step","Paragrah","urlId","paragraphText","connect","handleMessage","text","totalTime","repeated","fragmentUrlId","roundRender","stepsRender","direction","current","paragrahRender","chooseNextStep","VOTE_TIME","Fragment","fragment","secondAndText","splitIntoParagraph","nextParagraph","time","voting","tagging","secondAndTextTemp","result","testInput","regex","replace","trim","includes","test","nextIndex","command","console","log","Paragraph","ProgressBar","min","active","now","max","VirtualEdition","isActive","isStarting","game","invokeCommand","endGame","a","acronym","virtualEditionAcronym","virtualEditionInterDto","ended","context","Game","currentUsers","dateTime","onMessageReceive","games","find","element","gameExternalId","users","isAborted","virtualEdition","theme","count","GameLeaderboard","points","tableView","item","PrivateRoute","component","authenticated","rest","Route","render","Redirect","pathname","from","location","About","PanelGroup","accordion","Panel","Heading","Title","toggle","Body","collapsible","src","width","height","frameBorder","marginHeight","marginWidth","App","isAuthenticated","activeGames","enabled","handleLogout","loadCurrentUser","handleLogin","getAndSetupGames","config","placement","duration","clear","success","history","gameDate","dateItHappens","millisTillOccurence","getTime","setTimeout","styles","gamesView","g","available","getHours","getMinutes","getDate","virtualEditionTitle","SITE_URL","fragmentId","toLocaleDateString","toLocaleString","navigator","language","hour","minute","Switch","exact","path","GameLeadeboard","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.ed58c87c.chunk.js","sourcesContent":["export const ACCESS_TOKEN = 'accessToken';\nexport const API_BASE_URL = 'https://ldod.uc.pt/api';\nexport const API_LOGIN_URL = '/auth/signin';\nexport const API_USER_URL = '/user'\nexport const API_SERVICES_URL = '/services';\n\nexport const WEB_SOCKETS_URL = 'https://ldod.uc.pt/ws';\nexport const APP_PREFIX = '/ldod-game/';\nexport const SUBSCRIBE_URL = '/topic/ldod-game/';\nexport const FRAGMENTS_BASE_URL = '/fragments/fragment/';\nexport const INTER_BASE_URL = '/inter/';\nexport const SITE_URL = 'https://ldod.uc.pt';\n\nexport const VOTE_TIME = 30;\nexport const FINAL_TIME = 45;\nexport const TIME_FACTOR = 4;\nexport const LDOD_MESSAGE = \"LdoD Classification Game\"\n","import {ACCESS_TOKEN, API_BASE_URL, API_LOGIN_URL, API_USER_URL, API_SERVICES_URL} from './Constants';\r\n\r\nconst request = (options) => {\r\n  const headers = new Headers({'Content-Type': 'application/json'})\r\n\r\n  if (localStorage.getItem(ACCESS_TOKEN)) {\r\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\r\n  }\r\n\r\n  const defaults = {\r\n    headers: headers\r\n  };\r\n  options = Object.assign({}, defaults, options);\r\n\r\n  return fetch(options.url, options).then(response => {\r\n    if (!response.ok) {\r\n      return Promise.reject(response);\r\n    }\r\n    return response.json();\r\n  })\r\n};\r\n\r\nexport function login(loginRequest) {\r\n  return request({\r\n    url: API_BASE_URL + API_LOGIN_URL,\r\n    method: 'POST',\r\n    body: JSON.stringify(loginRequest)\r\n  });\r\n}\r\n\r\nexport function socialLogin(loginRequest) {\r\n  return request({\r\n    url: API_BASE_URL + \"/auth/social\",\r\n    method: 'POST',\r\n    body: JSON.stringify(loginRequest)\r\n  });\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  var token = JSON.parse(atob(localStorage.getItem(ACCESS_TOKEN).split('.')[1]));\r\n  var date = new Date(0);\r\n  date.setUTCSeconds(token.exp);\r\n  var currentDate = new Date();\r\n  if (currentDate > date) {\r\n    localStorage.removeItem(ACCESS_TOKEN)\r\n    return Promise.reject(\"Token expired.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + API_USER_URL,\r\n    method: 'GET'\r\n  });\r\n}\r\n\r\nexport function getUserProfile(username) {\r\n  return request({\r\n    url: API_BASE_URL + API_USER_URL + '/' + username,\r\n    method: 'GET'\r\n  });\r\n}\r\n\r\nexport function getVirtualEditionIndex(acronym) {\r\n  return request({\r\n    url: API_BASE_URL + API_SERVICES_URL + '/edition/' + acronym + '/index',\r\n    method: 'GET'\r\n  });\r\n}\r\n\r\nexport function getVirtualEditionFragment(acronym, urlId) {\r\n  return request({\r\n    url: API_BASE_URL + API_SERVICES_URL + '/edition/' + acronym + '/inter/' + urlId,\r\n    method: 'GET'\r\n  });\r\n}\r\n\r\nexport function getVirtualEditions4User(username) {\r\n  return request({\r\n    url: API_BASE_URL + API_SERVICES_URL + '/' + username + '/restricted/virtualeditions',\r\n    method: 'GET'\r\n  });\r\n}\r\n\r\nexport function getPublicVirtualEditions4User(username) {\r\n  return request({\r\n    url: API_BASE_URL + API_SERVICES_URL + '/' + username + '/public/virtualeditions',\r\n    method: 'GET'\r\n  });\r\n}\r\n\r\nexport function endGame(gameId) {\r\n  return request({\r\n    url: API_BASE_URL + API_SERVICES_URL + '/ldod-game/end/' + gameId,\r\n    method: 'GET'\r\n  });\r\n}\r\n\r\nexport function getLeaderboard() {\r\n  return request({\r\n    url: API_BASE_URL + API_SERVICES_URL + '/ldod-game/leaderboard/',\r\n    method: 'GET'\r\n  });\r\n}\r\n\r\nexport function getActiveGames(username) {\r\n  return request({\r\n    url: API_BASE_URL + API_SERVICES_URL + '/ldod-game/' + username + '/active',\r\n    method: 'GET'\r\n  });\r\n}\r\n","import React, { Component } from 'react';\nexport const Context = React.createContext();\nexport const Provider = Context.Provider;\nexport const Consumer = Context.Consumer;\n\nclass AppContext extends Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    \n    render() {\n        return (\n            <Provider value={this.state}> \n                {this.props.children}\n            </Provider>      \n        );\n    }\n}\n\nexport default AppContext;","import React, { Component } from 'react';\nimport { login } from '../../utils/APIUtils';\nimport './Login.css';\nimport { ACCESS_TOKEN, LDOD_MESSAGE } from '../../utils/Constants';\n\nimport { Form, Input, notification } from 'antd';\nimport {Glyphicon} from 'react-bootstrap';\nconst FormItem = Form.Item;\n\nclass Login extends Component {\n    render() {\n        const AntWrappedLoginForm = Form.create()(LoginForm)\n        return (\n            <div className=\"login-container\">\n                <h1 className=\"page-title\">Login</h1>\n                <div className=\"login-content\">\n                    <AntWrappedLoginForm onLogin={this.props.onLogin} />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const loginRequest = Object.assign({}, values);\n                login(loginRequest)\n                .then(response => {\n                    localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n                    this.props.onLogin();\n                }).catch(error => {\n                    if(error.status === 401) {\n                        notification.error({\n                            message: LDOD_MESSAGE,\n                            description: 'Your Username or Password is incorrect. Please try again!'\n                        });                    \n                    } else {\n                        notification.error({\n                            message: LDOD_MESSAGE,\n                            description: 'Sorry! Something went wrong. Please try again later!'\n                        });                                            \n}\n                });\n            }\n        });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <FormItem>\n                    {getFieldDecorator('username', {\n                        rules: [{ required: true, message: 'Please input your LdoD Username!' }],\n                    })(\n                    <Input\n                        prefix={<Glyphicon glyph=\"user\" />}\n                        size=\"large\"\n                        name=\"username\"\n                        placeholder=\"LdoD Username\" />\n                    )}\n                </FormItem>\n                <FormItem>\n                {getFieldDecorator('password', {\n                    rules: [{ required: true, message: 'Please input your LdoD Password!' }],\n                })(\n                    <Input\n                        prefix={<Glyphicon glyph=\"lock\" />}\n                        size=\"large\"\n                        name=\"password\"\n                        type=\"password\"\n                        placeholder=\"LdoD Password\"  />\n                )}\n                </FormItem>\n                <FormItem>\n                    <div className=\"login-form\">\n                        <button className=\"btn btn-primary form-control\" type=\"submit\">Login</button>\t\n                    </div>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\n\nexport default Login;","import React from 'react';\nimport { Spin, Icon } from 'antd';\n\nexport default function LoadingIndicator(props) {\n    const antIcon = <Icon type=\"loading-3-quarters\" style={{ fontSize: 50 }} spin />;\n    return (\n        <Spin indicator={antIcon} style = {{display: 'block', textAlign: 'center', marginTop: 30}} />\n    );\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {  Button, Glyphicon, Grid, Jumbotron} from 'react-bootstrap';\n\nclass NotFound extends Component {\n    render() {\n        return (\n            <Grid fluid>\n\t\t\t\t<Jumbotron  style={{ backgroundColor: 'white' }} >\n                    <div className=\"text-center\">\n                        <i className=\"fa  fa-spin fa-wrench fa-5x\"></i>\n                    </div>\n                    <h1 className=\"text-center\">Error 404: Page not found!</h1>\n                </Jumbotron>\n                <div className=\"text-center\"> \n                <Button bsStyle=\"primary\" componentClass={Link} to=\"/\">\n                    Go Back <Glyphicon glyph=\"home\"/> \n                </Button>   \n                </div>\t\n            </Grid>\n            \n        );\n    }\n}\n\nexport default NotFound;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {  Button, Glyphicon, Grid, Jumbotron} from 'react-bootstrap';\n\n\nclass ServerError extends Component {\n    \n    render() {\n        return (\n            <Grid fluid>\n\t\t\t\t<Jumbotron  style={{ backgroundColor: 'white' }} >\n                    <div className=\"text-center\">\n                        <i className=\"fa  fa-spin fa-wrench fa-5x\"></i>\n                    </div>\n                    <h1 className=\"text-center\">Error 500: Ooops! Something went wrong...</h1>\n                </Jumbotron>\n                <div className=\"text-center\"> \n                <Button bsStyle=\"primary\" componentClass={Link} to=\"/\">\n                    Go Back <Glyphicon glyph=\"home\"/> \n                </Button>   \n                </div>\t\n            </Grid>\n        );\n    }\n}\n\nexport default ServerError;","import React, { Component } from 'react';\nimport { getUserProfile, getPublicVirtualEditions4User } from '../../utils/APIUtils';\nimport { Grid, Row, Col, ListGroup, ListGroupItem} from 'react-bootstrap';\nimport LoadingIndicator  from '../../common/LoadingIndicator';\nimport NotFound from '../../common/NotFound';\nimport ServerError from '../../common/ServerError';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            isLoading: false,\n            notFound: false,\n            publicVEs: []\n        }\n        this.loadUserProfile = this.loadUserProfile.bind(this);\n        this.getUserPublicVirtualEditions = this.getUserPublicVirtualEditions.bind(this);\n    }\n    \n    loadUserProfile(username) {\n        this.setState({\n            isLoading: true});\n\n        getUserProfile(username)\n        .then(response => {\n            this.setState({\n                user: response,\n                isLoading: false\n            });\n        }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });\n            }\n        });\n    }\n\n    getUserPublicVirtualEditions(username){\n        getPublicVirtualEditions4User(username).then(response => {\n            this.setState({\n                publicVEs: response\n            });\n        });\n    }\n\n    componentDidMount() {\n        const username = this.props.match.params.username;\n        this.loadUserProfile(username);\n        this.getUserPublicVirtualEditions(username);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(this.props.match.params.username !== nextProps.match.params.username) {\n            this.loadUserProfile(nextProps.match.params.username);\n        }\n    }\n\n    render() {\n        if(this.state.isLoading) {\n            return <LoadingIndicator />;\n        }\n\n        if(this.state.notFound) {\n            return <NotFound />;\n        }\n\n        if(this.state.serverError) {\n            return <ServerError />;\n        }\n        return (\n            <div className=\"profile\">\n                <Grid fluid>\n                    { \n                        this.state.user ? (\n                    <Row>\n                        <Col mdOffset={2} md={8} lgOffset={3} lg={6}>\n                            <h4 className=\"text-center\">\n                                {this.state.user.firstName} {this.state.user.lastName}\n                            </h4>\n                            <ListGroup>\n                                    Virtual Editions: \n                                    {this.state.publicVEs.map((publicVE,index) => (\n                                            <div key={index}>\n                                                <ListGroupItem bsStyle=\"info\">{publicVE.title}</ListGroupItem>\n                                            </div>\n                                            ))}\n                            </ListGroup>\n                            <a href={`https://ldod.uc.pt/edition/user/${this.state.user.username}`}><em>LdoD Archive</em> profile.</a>\n                            </Col>\n                    </Row> ) : null }\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import React, { Component } from 'react';\nimport {\n    Link,\n    withRouter\n} from 'react-router-dom';\nimport './Header.css';\nimport { Glyphicon, Nav, Navbar, NavItem, NavDropdown, MenuItem } from 'react-bootstrap';\n\nclass HeaderNavigation extends Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        let menuItems;\n        if(this.props.currentUser) {\n            let name = this.props.currentUser.firstName + \"  \" + this.props.currentUser.lastName;\n            menuItems =\n                <Navbar.Collapse>\n                    <Nav pullRight>\n                        <NavItem eventKey={1} componentClass={Link} href=\"/\" to=\"/\">\n                            <Glyphicon glyph=\"home\" className=\"nav-icon\" />\n                        </NavItem>\n                        <NavItem eventKey={2} componentClass={Link} href=\"/about\" to=\"/about\">\n                            About\n                        </NavItem>\n                        <NavItem eventKey={5} componentClass={Link} href=\"/leaderboard\" to=\"/leaderboard\">\n                            Leaderboard\n                        </NavItem>\n                        <NavItem eventKey={6} componentClass={Link} href=\"/feedback\" to=\"/feedback\">\n                            Feedback\n                        </NavItem>\n                        <NavDropdown eventKey={5} title={name} id=\"nav-dropdown\">                       \n                            <MenuItem eventKey={5.1} componentClass={Link} href={`/user/${this.props.currentUser.username}`} to={`/user/${this.props.currentUser.username}`}>\n                                Profile\n                            </MenuItem>\n                            <MenuItem eventKey={5.2} onClick={this.props.onLogout}>\n                                Logout\n                            </MenuItem>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>;\n        }\n        else{\n            menuItems = \n                <Navbar.Collapse>\n                <Nav pullRight>\n                    <NavItem eventKey={1} componentClass={Link} href=\"/login\" to=\"/login\">\n                        Login\n                    </NavItem>\n                    <NavItem eventKey={2} componentClass={Link} href=\"/about\" to=\"/about\">\n                        About\n                    </NavItem>\n                    <NavItem eventKey={3} componentClass={Link} href=\"/feedback\" to=\"/feedback\">\n                       Feedback\n                    </NavItem>\n                </Nav>\n            </Navbar.Collapse>;\n        }\n        return (\n            <Navbar default collapseOnSelect>\n                <Navbar.Header>\n                    <Navbar.Brand>\n                        <Link to=\"/\">LdoD Classification Game</Link>\n                    </Navbar.Brand>\n                    <Navbar.Toggle />\n                </Navbar.Header>\n                {menuItems}\n            </Navbar>\n    );\n  }\n}\n\nexport default withRouter(HeaderNavigation);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { WEB_SOCKETS_URL, APP_PREFIX, SUBSCRIBE_URL} from '../utils/Constants';\nimport { Tag as TagD } from 'antd';\nimport { Button, FormControl, FormGroup, InputGroup, Table, Grid, Row, Col} from 'react-bootstrap';\nimport SockJsClient from 'react-stomp'\nvar tags = \" \";\nclass Tag extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags: [],\n            value: \" \" ,\n            validate:this.props.disabled,\n        };\n        this.handleTag = this.handleTag.bind(this);\n        this.getValidationState = this.getValidationState.bind(this);\n    }\n    \n    componentDidMount(){\n        this.setState({\n            socket:   <SockJsClient\n                url={WEB_SOCKETS_URL}\n                topics={[ SUBSCRIBE_URL + this.props.gameId + '/tags']}\n                ref={ (client) => { this.clientRef = client }}\n                onMessage={(message) => this.props.handleMessageTag(message)} />\n        });\n        \n    }\n\n    handleTag = (e) => {\n        const form = e.target;\n        var input = form[\"tag\"].value;\n\n        if(input.length <= 1){\n            this.setState({\n                validate: \"error\",\n            })\n            e.preventDefault();\n            return;\n        }\n\n        this.sendMessage(input);\n        tags += \"<br>\" + input;\n        form.reset();\n        this.setState({\n            tags: [...this.state.tags, input],\n        })\n        e.preventDefault();\n    }\n\n    sendMessage = (msg) => {\n        try {\n            this.clientRef.sendMessage(APP_PREFIX + this.props.gameId + '/tags', JSON.stringify({ gameId: this.props.gameId, authorId: this.props.userId, msg: msg, vote: 1, paragraph: this.props.index}));\n            return true;\n\n        } catch(e) {\n            return false;\n        }\n    }\n    \n    getValidationState(){\n        const length = this.state.value.length;\n        if (length < 1){\n            return \"warning\";\n        }\n        return null;\n    }\n\n    handleChange(event) {\n        const value = event.target.value;\n        \n        this.setState({\n          value: value\n        });\n    }\n\n    render() {\n        const tagViews = [];\n        let messages = this.state.tags;\n        messages.forEach((m, mIndex) => {\n            tagViews.push(<TagD color=\"#e1b12c\" key={mIndex} >{m}</TagD>)\n        });\n        return (\n            <div> \n                {this.state.socket}\n                <Grid>\n                    <Row>\n                        <Col md={4} mdOffset={4} xs={5}>\n                        <form id=\"form\" autoComplete=\"off\" onSubmit={(e) => {this.handleTag(e)}}>\n                        <FormGroup validationState={ this.getValidationState()}>\n                            <InputGroup>\n                                <FormControl \n                                    disabled={this.props.disabled}\n                                    placeholder=\"Tag this paragraph\" \n                                    id=\"tag\"\n                                    type=\"text\"\n                                    spellCheck=\"true\"\n                                    onChange={this.handleChange.bind(this)} \n                                    autoFocus />\n                                </InputGroup>\n                                <FormControl.Feedback />\n                                <Button className=\"btn btn-primary\" disabled={this.props.disabled} type=\"submit\">\n                                    <span className=\"glyphicon glyphicon-plus\"></span>\n                                </Button>\n                        </FormGroup>\n                        </form>\n                        </Col>    \n                    </Row>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th><span className=\"glyphicon glyphicon-tag\"></span></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <div>{tagViews}</div>\t\t\t\n                            </td>\n                        </tr>\n                    </tbody>\n            \t</Table>\n                </Grid>\n            </div>\n        );\n    }\n}\n\n\nexport default withRouter(Tag);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { WEB_SOCKETS_URL, SUBSCRIBE_URL, APP_PREFIX} from '../utils/Constants';\nimport './Vote.css';\nimport { Table} from 'react-bootstrap';\nimport SockJsClient from 'react-stomp';\nimport AppContext from '../app/AppContext';\nimport {Provider} from '../app/AppContext';\n\nclass Vote extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            socket: null,\n            votes: [],\n            previousVotedTag: null,\n        };\n        this.handleMessageVote = this.handleMessageVote.bind(this);\n    }\n    \n    componentDidMount(){\n        this.setState({\n            socket:  <SockJsClient\n                        url={WEB_SOCKETS_URL}\n                        topics={[SUBSCRIBE_URL + this.props.gameId +'/votes']}\n                        ref={ (client) => { this.clientRef = client }}\n                        onMessage={(message) => this.handleMessageVote(message)} />,\n            votes: this.props.initialTags,\n            seconds: this.props.seconds,\n            topTag: this.props.topTag,\n            winner: this.props.winner,\n        })\n        this.interval = setInterval(() => this.tick(), 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n        // <AppContext>\n        //     <Provider value={{winner: this.state.winner, top: this.state.topTag}}>  \n        //         {this.props.children}\n        //     </Provider>\n        // </AppContext>\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.seconds !== prevProps.seconds) {\n            this.setState({\n                seconds: this.props.seconds,\n                topTag: this.props.topTag,\n            })\n        }\n    }\n  \n    tick() {\n        this.setState(prevState => ({\n          seconds: prevState.seconds - 1\n        }));\n    }\n\n    sendMessage = (msg, vote) => {\n        try {\n          var number = this.props.round !== 3 ? this.props.index : this.props.limit;\n          this.clientRef.sendMessage(APP_PREFIX + this.props.gameId + '/votes', JSON.stringify({ gameId: this.props.gameId, voterId: this.props.userId, msg: msg, vote: vote, paragraph: number}));\n          return true;\n        } catch(e) {\n          return false;\n        }\n    }\n\n    handleMessageVote(message) {\n        var dictionary = this.state.votes;\n        let copy = [...this.state.votes];\n        var vote = Math.round(parseFloat(message[3]));\n        var temp = { authorId: message[1], tag: message[2], vote: vote};\n        for(var i in dictionary){\n            if(dictionary[i].tag === temp.tag){\n                copy.splice(i, 1, temp);\n                this.setState(({\n                    votes: copy,\n                    topTag: message[4],\n                    winner: message[5],\n                }));\n            }\n        }\n    }\n\n    onChange = (param) => (e) => {\n        if (this.props.round !== 3){\n            this.setState({\n                disabled: true,\n            })    \n            this.sendMessage(param.tag, 1.0);\n            return \n        }\n\n        if (this.state.previousVotedTag === null){\n            this.setState({\n                previousVotedTag: param.tag,\n            })\n            this.sendMessage(param.tag, 1.0); \n        }else{\n            this.sendMessage(param.tag, 1.0); \n            this.sendMessage(this.state.previousVotedTag, -1.0); \n            this.setState({\n                previousVotedTag: param.tag,\n            })\n        }\n    }\n\n    render() {\n        const voteViews = [];\n        let votes = this.state.votes;\n        let top;\n        let msg = \"Choose which tag is better...\"\n        if(this.props.round !== 3){\n            votes.forEach((m, index) => {\n                    voteViews.push(\n                        <div className=\"div-votes\" key={index}>\n                            <div>\n                                <label>\n                                    <span className=\"title\">{m.tag}</span>\n                                    <input name=\"voteGroup\" type=\"radio\" onChange={this.onChange(m)} disabled={this.state.disabled}></input>\n                                </label>\n                            </div>\n                        </div>)\n            });\n        }\n\n        else{\n           top = <h3 className=\"text-center\">Top tag: {this.state.topTag}</h3>;\n           this.state.votes.forEach((m, index) => {\n                \n                    voteViews.push(\n                        <div className=\"div-votes\" key={index}>\n                            <div>\n                                <label>\n                                    <span className=\"title\">{m.tag}</span>\n                                    <input name=\"voteGroup\" type=\"radio\" onChange={this.onChange(m)} disabled={this.props.hasEnded}></input>\n                                    <span className=\"vote\">{m.vote}</span>\n                                </label>\n                            </div>\n                        </div>)\n                \n            });\n\n        }\n\n        return (\n            <div>\n                {this.state.socket}\n                {top}\n                <Table>\n                    <thead>\n                        <tr>\n                            <th><span className=\"glyphicon glyphicon-tag\"></span>    {this.props.round !== 3 ? msg : null}</th>\n                        {this.props.round !== 3 ? <th> You suggested so far:  {this.props.userSuggestedTags} </th> : null}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <div className=\"div-votes\">\n                                    {voteViews}\n                                </div>\t\t\t\n                            </td>\n                        </tr>\n                    </tbody>\n            \t</Table>\n            </div>\n        );\n    }\n}\n\n\nexport default withRouter(Vote);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { WEB_SOCKETS_URL, SUBSCRIBE_URL, APP_PREFIX, FINAL_TIME} from '../utils/Constants';\nimport Vote  from './Vote';\nimport { Steps, Divider } from 'antd';\nimport { Grid, Alert} from 'react-bootstrap';\nimport LoadingIndicator  from '../common/LoadingIndicator';\nimport SockJsClient from 'react-stomp'\nvar ReactCountdownClock = require(\"react-countdown-clock\")\nclass Review extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            socket: null,\n            votes: [],\n            seconds: 0.0,\n            hasEnded: false,\n        };\n        this.handleMessageReview = this.handleMessageReview.bind(this);\n        this.getFinalTags = this.getFinalTags.bind(this);\n    }\n    \n    componentDidMount(){\n        this.setState({\n            votes: this.props.initialTags,\n            seconds: this.props.seconds,\n            isLoading: true,\n            socket: <SockJsClient\n                            url={WEB_SOCKETS_URL}\n                            topics={[ SUBSCRIBE_URL + this.props.gameId +'/review', SUBSCRIBE_URL + this.props.gameId +'/sync']}\n                            ref={ (client) => { this.clientRef = client }}\n                            onConnect={ () => { this.getFinalTags() }}\n                            onMessage={(message) => this.handleMessageReview(message)} />\n        })\n        this.interval = setInterval(() => this.tick(), 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.seconds !== prevProps.seconds) {\n            this.setState({\n                seconds: this.props.seconds,\n            })\n        }\n    }\n  \n    tick() {\n        this.setState(prevState => ({\n          seconds: prevState.seconds - 1\n        }));\n    }\n\n    getFinalTags(){\n        try{\n            this.clientRef.sendMessage(APP_PREFIX + this.props.gameId + '/review', JSON.stringify({ gameId: this.props.gameId, voterId: this.props.userId, msg: \"emptyMsg\", vote: \"emptyVote\", limit: this.props.limit}));\n            this.clientRef.sendMessage(APP_PREFIX + this.props.gameId + '/sync', JSON.stringify({ gameId: this.props.gameId, voterId: this.props.userId, msg: \"emptyMsg\", vote: \"emptyVote\", limit: this.props.limit}));\n            return true;\n        } catch(e) {\n            return false;\n        }\n    \n    }\n\n    handleMessageReview(message) {\n        if(message[0] === \"continue\") {\n            this.setState({\n                isLoading: false,\n            })\n            return;\n        }\n        var res = [];\n        var tagAndWinner = message.pop();\n        var winner = Object.keys(tagAndWinner);\n        var topTag = Object.values(tagAndWinner)\n        for(var i = 0; i < message.length; i++){\n            var temp = { tag: message[i].tag, vote: Math.round(parseFloat(message[i].vote))}; \n            res.push(temp)\n        }\n        this.setState({\n            votes: res,\n            topTag: topTag[0],\n            winner: winner[0],\n        })\n        \n    }\n    \n    finishGame(){\n        this.setState({\n            hasEnded: true,\n        })\n        this.props.endFragment();\n    }\n\n    render() {\n        let style = {   marginTop: \"-45px\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        paddingBottom: \"25px\",};\n        if(this.state.isLoading) {\n            return (\n                <div>\n                    <Alert bsStyle=\"info\">\n                        <strong>Quick break before the final step...</strong>\n                    </Alert>\n                    {this.state.socket}\n                    <LoadingIndicator />\n                </div>\n            );\n        }\n\n        return (\n            <div>                \n                <div style={style}>\n                        <ReactCountdownClock seconds={FINAL_TIME}\n                            color=\"#2ecc71\"\n                            size={80}\n                            showMilliseconds={false}\n                            onComplete={this.finishGame.bind(this)}/>\n                </div>                \n                {this.props.steps}\n                <Grid fluid>\n                    <h4 className=\"text-center\">Tags submitted:</h4>\n                    <div className=\"well\" style={{ fontFamily: 'georgia', fontSize: 'small'}}>\n                        <Vote \n                            gameId={this.props.gameId} \n                            userId={this.props.userId} \n                           // seconds={this.props.totalTime} \n                            seconds={30} \n                            round={3}\n                            limit={this.props.limit}\n                            topTag={this.state.topTag}\n                            hasEnded={this.state.hasEnded}\n                            initialTags={this.state.votes}/>\n                        <Divider dashed />\n                            <h4 className=\"text-center\">{this.props.title}</h4>\n                            <div dangerouslySetInnerHTML={{__html: this.props.fullText}}></div>\n                            \n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}\n\n\nexport default withRouter(Review);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Tag from './Tag';\nimport Vote from './Vote';\nimport Review  from './Review';\nimport { WEB_SOCKETS_URL, SUBSCRIBE_URL, APP_PREFIX, VOTE_TIME} from '../utils/Constants';\nimport { Steps } from 'antd';\nimport { Grid, Alert} from 'react-bootstrap';\nimport LoadingIndicator  from '../common/LoadingIndicator';\nimport SockJsClient from 'react-stomp'\nvar ReactCountdownClock = require(\"react-countdown-clock\")\nconst Step = Steps.Step;\nclass Paragrah extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"\",\n            urlId: \"\",\n            paragraphText: \"\",\n            tags: [],\n            round: 1,\n            seconds: 5,\n            disabled: false,\n            fullText: \"\",\n            userSuggestedTags: [],\n        };\n       this.connect = this.connect.bind(this);\n       this.handleMessage = this.handleMessage.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        if (prevProps.round !== this.props.round && prevProps.paragraphText === this.props.paragraphText) {\n            this.setState({\n                title: this.props.title,\n                urlId: this.props.urlId,\n                paragraphText: this.props.paragraphText,\n                fullText: this.props.text,\n                seconds: this.props.seconds,\n                round: this.props.round,\n                totalTime: this.props.totalTime,\n                disabled: false,\n                isLoading: true,\n                socket: <SockJsClient\n                url={WEB_SOCKETS_URL}\n                topics={[ SUBSCRIBE_URL + this.props.gameId +'/sync']}\n                ref={ (client) => { this.clientRef = client }}\n                onConnect={ () => { this.connect() }}\n                onMessage={(message) => this.handleMessage(message)} />\n            });\n        }\n\n        else if (prevProps.round !== this.props.round && prevProps.paragraphText !== this.props.paragraphText) {\n            this.setState({\n                tags: [],\n                title: this.props.title,\n                urlId: this.props.urlId,\n                paragraphText: this.props.paragraphText,\n                fullText: this.props.text,\n                seconds: this.props.seconds,\n                round: this.props.round,\n                totalTime: this.props.totalTime,\n                disabled: false,\n                isLoading: true,\n                socket: <SockJsClient\n                url={WEB_SOCKETS_URL}\n                topics={[ SUBSCRIBE_URL + this.props.gameId +'/sync']}\n                ref={ (client) => { this.clientRef = client }}\n                onConnect={ () => { this.connect() }}\n                onMessage={(message) => this.handleMessage(message)} />\n            });\n        }\n\n        \n    }\n    \n    connect() {\n        try{\n            this.clientRef.sendMessage(APP_PREFIX + this.props.gameId + '/sync', JSON.stringify({ gameId: this.props.gameId, userId: this.props.userId}));\n            return true;\n        } catch(e) {\n            return false;\n        }\n    }\n\n    handleMessage(message){\n        if(message[0] === \"continue\") {\n            this.setState({\n                isLoading: false,\n            })\n        }\n    }\n    \n    handleMessageTag(message) {\n        \n        var dictionary = this.state.tags;\n        let copy = [...this.state.tags];\n        var repeated = false;\n        var temp = { fragmentUrlId: message[0], authorId: message[1], tag: message[2], vote: message[3]};\n         \n        // Check repeated suggested tags and only save first instance\n        for(var i in dictionary){\n            if(dictionary[i].tag === temp.tag){\n                copy.splice(i, 1, temp);\n                this.setState(({\n                    tags: copy,\n                }));\n                repeated = true;\n            }\n        }\n\n        //Only allow one user submission per paragraph\n        if(temp.authorId === localStorage.getItem(\"currentUser\")){\n            this.setState(({\n                userSuggestedTags: [...this.state.userSuggestedTags, temp.tag+ \"   \"],\n                disabled: true,\n            }));\n        }\n\n        if(!repeated){\n            this.setState(({\n                tags: [...this.state.tags, temp],\n            }));\n        }\n    }\n    \n    render() {\n        let style = {   marginTop: \"-45px\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        paddingBottom: \"25px\",};\n        let stepsRender =  \n            <Steps direction=\"horizontal\" current={this.props.round-1}>\n                <Step title=\"Tag\"/>\n                <Step title=\"Vote\"/>\n                <Step title=\"Review\"/>\n            </Steps>\n        let paragrahRender = \n            <div>\n                <h4 className=\"text-center\">{this.state.title}</h4>\n                <div className=\"well\" style={{ fontFamily: 'georgia', fontSize: 'medium'}}>\n                    <div dangerouslySetInnerHTML={{__html: this.state.paragraphText}}></div>\n                </div>\n            </div>\n\n        let roundRender;\n        if(this.state.isLoading) {\n            return (\n                <div>\n                    <Alert bsStyle=\"info\">\n                        <strong>Syncing before next step...</strong>\n                    </Alert>\n                    {this.state.socket}\n                    <LoadingIndicator />\n                </div>\n            );\n        }\n        if (this.props.round === 1) {\n            roundRender =\n                <div>\n                <div style={style}>\n                        <ReactCountdownClock \n                            seconds={this.props.seconds}\n                            color=\"#2ecc71\"\n                            size={80}\n                            showMilliseconds={false}\n                            onComplete={()=>this.props.chooseNextStep(\"voting\")}/>\n                    </div>\n                    {stepsRender}\n                    {paragrahRender}\n                    <Tag \n                        gameId={this.props.gameId}\n                        userId={this.props.userId}\n                        index={this.props.index}\n                        handleMessageTag={this.handleMessageTag.bind(this)} \n                        disabled={this.state.disabled}/>\n                </div>\n          } \n          else if(this.props.round === 2) {\n            roundRender =\n                <div>\n                <div style={style}>\n                <ReactCountdownClock \n                            seconds={VOTE_TIME+0.01}\n                            color=\"#2ecc71\"\n                            size={80}\n                            showMilliseconds={false}\n                            onComplete={()=>this.props.chooseNextStep(\"taggingNextParagraph\")}/>\n                </div>\n                    {stepsRender}\n                    {paragrahRender}    \n                    <Vote \n                        seconds={this.props.seconds} \n                        gameId={this.props.gameId}\n                        userSuggestedTags={this.state.userSuggestedTags}\n                        userId={this.props.userId}\n                        limit={this.props.limit}\n                        index={this.props.index}\n                        initialTags={this.state.tags}/>\n                </div>\n            } \n        else if(this.props.round === 3){\n            return(\n                <div>\n                    <Review\n                        gameId={this.props.gameId}\n                        userId={this.props.userId} \n                        limit={this.props.limit}\n                        steps={stepsRender} \n                        endFragment={this.props.endFragment} \n                        totalTime={this.state.totalTime} \n                        initialTags={this.state.tags} \n                        title={this.state.title} \n                        fullText={this.state.fullText}/>\n                </div>\n            );\n        }\n        return (\n            <Grid fluid>\n                {roundRender}\n            </Grid>\n        );\n    }\n}\n\n\nexport default withRouter(Paragrah);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Paragraph from './Paragraph';\nimport { ProgressBar, Grid } from 'react-bootstrap';\nimport { TIME_FACTOR } from '../utils/Constants';\nclass Fragment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fragment: { },\n            secondAndText: [],\n            text: \"\",\n            paragraphText: [],\n            index: 0,\n            seconds: 5.0,\n            round: 0,\n            tags: [],\n            totalTime: 0,\n        };\n        this.splitIntoParagraph = this.splitIntoParagraph.bind(this);\n        this.nextParagraph = this.nextParagraph.bind(this);\n        this.chooseNextStep = this.chooseNextStep.bind(this);\n        \n    }\n    \n    componentDidMount() {\n        var text = this.splitIntoParagraph(this.props.fragment.text).text;\n        var time = this.splitIntoParagraph(this.props.fragment.text).time;\n        var totalTime = this.splitIntoParagraph(this.props.fragment.text).totalTime;\n        this.setState({\n            text: this.props.fragment.text,\n            title: this.props.fragment.title,\n            paragraphText: text,\n            secondAndText: time,\n            urlId: this.props.fragment.urlId,\n            voting: false,\n            tagging: true,\n            round: 1,\n            totalTime: totalTime,\n         });\n\n    }\n\n    splitIntoParagraph(text){\n        var secondAndTextTemp = [];\n        var result = [];\n        var paragraph = text.split(\"</p>\");\n        var testInput = paragraph;\n        var regex = /(<([^>]+)>)/ig;\n        //var largeInt = 100000000;\n        var totalTime = 0;\n\n        // Remove tags and spaces on all text\n        for(var i = 0; i < testInput.length; i++){\n            testInput[i] = testInput[i].replace(regex, \"\").trim();\n            var size = testInput[i].length\n            var temp = size >= 181 ? size/TIME_FACTOR : 45;\n            //var temp = size >= 200 ? 45 + i/largeInt : 30 + i/largeInt;\n            secondAndTextTemp[i] = temp;\n            totalTime += temp;\n        }  \n        \n        // Check first paragraph and remove it if matches criteria\n        if(testInput[0].includes(\"L. do D.\") || testInput[0].length <= 13){\n            paragraph.splice(0,1);\n            secondAndTextTemp.splice(0,1);\n        }\n\n        for (i = 0; i < paragraph.length; i++) {\n            if (/\\S/.test(paragraph[i])) {\n                result.push(paragraph[i]);\n            }\n        }\n        \n        var res = { text: result, time: secondAndTextTemp, totalTime};\n        return res;\n    }\n\n    nextParagraph(){\n        var currentIndex= this.state.index;\n        var nextIndex = currentIndex+1;\n        \n        // First round paragraph increment\n        if(this.state.index < this.state.paragraphText.length - 1){ \n            this.setState((prevState) => ({\n                index: prevState.index + 1,\n                seconds: this.state.secondAndText[nextIndex],\n            }));\n        }\n        // Change to round 2 and reset paragraph order\n        else if( this.state.index === this.state.paragraphText.length-1){\n            this.setState((prevState) => ({\n                index: 0,\n                seconds: prevState.secondAndText[0],\n                round: prevState.round + 1,\n            }));\n        }\n    }\n\n    chooseNextStep(command){\n        //console.log(\"chooseNextStep \" + command);\n        var currentIndex = this.state.index;\n        var nextIndex = currentIndex+1;\n        switch(command) {\n            case \"voting\":\n                this.setState((prevState) => ({\n                    round: 2,\n                    seconds: prevState.seconds,\n                }));\n                return;\n            \n            case \"taggingNextParagraph\":\n                if( this.state.index === this.state.paragraphText.length-1){\n                    this.setState((prevState) => ({\n                        round: 3,\n                    }));\n                    return;\n                }\n                this.setState((prevState) => ({\n                    round: 1,\n                    index: prevState.index + 1,\n                    seconds: this.state.secondAndText[nextIndex]+0.1,\n                }));\n                return;\n            \n            default:\n                console.log(\"error\");\n                return;\n        }   \n        \n    }\n\n    render() {\n        return (\n            <Grid fluid>\n                    <Paragraph \n                    title={this.state.title}\n                    text={this.state.text}\n                    userId={this.props.userId}\n                    gameId={this.props.gameId}\n                    limit={this.state.paragraphText.length}                \n                    nextParagraph={this.nextParagraph} \n                    paragraphText={this.state.paragraphText[this.state.index]}\n                    seconds={this.state.secondAndText[this.state.index]}\n                    index={this.state.index} \n                    round={this.state.round} \n                    totalTime={this.state.totalTime}\n                    chooseNextStep={this.chooseNextStep}\n                    endFragment={this.props.endFragment}/>\n                {this.state.round === 3 ? (<div>{}</div>) : \n                (\n                    <ProgressBar min={0} bsStyle=\"success\"active now={this.state.index+1} max={this.state.paragraphText.length}/>)}\n            </Grid>\n        );\n    }\n}\n\n\nexport default withRouter(Fragment);","import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { endGame, getVirtualEditionFragment} from '../utils/APIUtils';\nimport Fragment  from './Fragment';\nimport { Alert, Grid, Jumbotron, Glyphicon, Button} from 'react-bootstrap';\nvar ReactCountdownClock = require(\"react-countdown-clock\")\nclass VirtualEdition extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isActive: false,\n            isStarting: true,\n            fragment: null,\n            game: null,\n        };\n        this.invokeCommand = this.invokeCommand.bind(this);\n        this.endGame = this.endGame.bind(this);\n    }\n    \n    async componentDidMount() {\n        let request = await getVirtualEditionFragment(this.props.game.virtualEditionAcronym, this.props.game.virtualEditionInterDto.urlId);\n        this.setState({\n            fragment: request,\n            game: this.props.game,\n        })\n    }\n\n    async endGame(){\n        let response = await endGame(this.props.gameId);\n        this.setState({\n            ended: true,\n            winner: response[0],\n        })\n    }\n    \n    invokeCommand(command) {\n        switch(command) {\n            case \"start\":\n                this.setState(({\n                    isActive: true,\n                    isStarting: false,\n                }));\n                return;\n            \n            case \"end\":\n                this.endGame();\n                this.setState({\n                    isActive: true,\n                    isStarting: false,\n                });\n                return;\n            \n            default:\n                console.log(\"error\");\n                return;\n        }\n    }\n\n    render() {\n        if(this.state.ended) {\n            return (\n                <Grid fluid>\n                <Jumbotron  style={{ backgroundColor: 'white' }} >\n                    <h1 className=\"text-center\">The winner is: {this.state.winner}</h1>\n                </Jumbotron>\n                <div className=\"text-center\"> \n                <Button bsStyle=\"primary\" componentClass={Link} to=\"/leaderboard\">\n                    Check leaderboard for all scores <Glyphicon glyph=\"stats\"/> \n                </Button>   \n                </div>\t\n                    \n              </Grid>\n            );\n        }\n        if(this.state.isActive) {\n            return (\n              <Grid fluid>\n                        <Fragment\n                        fragment={this.state.fragment} \n                        userId={this.props.userId}\n                        gameId={this.props.gameId} \n                        endFragment={() => this.invokeCommand(\"end\")}/>\n              </Grid>\n            );\n        }\n        if(this.state.isStarting){\n            return (\n            <Grid fluid>\n                <Alert bsStyle=\"info\">\n                    <strong>The game is about to start in: </strong>\n                </Alert>\n                <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", }} >\n                    <ReactCountdownClock seconds={10}\n                        color=\"#3498db\"\n                        size={200}\n                        showMilliseconds={false}\n                        onComplete={() => this.invokeCommand(\"start\")}/>\n                </div>\n            </Grid>\n            );\n        }\n    }\n    \n}\n\nexport default withRouter(VirtualEdition);","import React, { Component } from 'react';\nimport VirtualEdition from './VirtualEdition';\nimport { getVirtualEditionIndex } from '../utils/APIUtils';\nimport { Badge, Icon} from 'antd';\nimport { Grid, Jumbotron} from 'react-bootstrap';\nimport { WEB_SOCKETS_URL, SUBSCRIBE_URL, APP_PREFIX} from '../utils/Constants';\nimport SockJsClient from 'react-stomp'\nimport {Consumer} from '../app/AppContext';\nexport default props => (\n    <Consumer>\n      {context => <Game {...props} context={context} />}\n    </Consumer>\n);\nclass Game extends Component {\n    constructor(props, context) {   \n        super(props,  context);\n        this.state = {\n            socket: null,\n            currentUsers: 0,\n            game: null,\n            gameId: null,\n            userId: \" \",\n            isLoading: true,\n            dateTime: 0,\n        };\n        this.connect = this.connect.bind(this);\n        this.onMessageReceive = this.onMessageReceive.bind(this);\n    }\n\n    async componentDidMount(){\n        const gameId = this.props.match.params.id;\n        var game = this.props.context.games.find(function(element) {\n            return element.gameExternalId === gameId;\n        });\n        if (this.props.context.currentUser === null) {\n            return;\n        }\n        this.setState({\n           game: game,\n           gameId: gameId,\n           userId: this.props.context.currentUser.username,\n           dateTime: new Date(game.dateTime),\n           socket: <SockJsClient\n                    url={WEB_SOCKETS_URL}\n                    topics={[ SUBSCRIBE_URL + gameId + '/register']}\n                    ref={ (client) => { this.clientRef = client }}\n                    onConnect={ () => { this.connect(gameId)}}\n                    onMessage={(message) => this.onMessageReceive(message)} /> \n        });\n        \n    }\n\n    connect(gameId){\n        try {\n            this.clientRef.sendMessage(APP_PREFIX + gameId + '/connect', JSON.stringify({ userId: this.props.context.currentUser.username, gameId: gameId}));\n            this.clientRef.sendMessage(APP_PREFIX + gameId + '/register', JSON.stringify({ userId: this.props.context.currentUser.username, gameId: gameId}));\n            return true;\n          } catch(e) {\n            return false;\n          }\n        \n    }\n\n    onMessageReceive(message) {\n        var users = message[0];\n        var command = message[1];\n        if(command === \"ready\"){\n            this.setState({\n                currentUsers: users,\n                isLoading: false,\n            })\n            return; \n        }\n        else if(command === \"aborted\") {\n            this.setState({\n                isAborted: true,\n            })\n        }\n    }\n\n\n    \n    async loadVirtualEdition(){\n        this.setState({\n            isLoading: true,\n        })\n\n        let request = await getVirtualEditionIndex(this.props.context.game.virtualEditionAcronym);\n\n        this.setState({\n            virtualEdition: request,\n        })\n        \n    }\n\n\n\n    render() {\n        if(this.state.isAborted) {\n            return (\n                <Grid fluid>\n                    <Jumbotron  style={{ backgroundColor: 'white' }} >\n                        <h2 className=\"text-center\">\n                            Not enough players joined this game...\n                        </h2>\n                    </Jumbotron>\n                    <div className=\"text-center\">\n                        <Icon type=\"frown\" theme=\"outlined\" style={{ fontSize: 50 }}/>\n                    </div>\n                </Grid>\n            );\n        }\n\n        if(this.state.isLoading){\n            return (\n                <Grid fluid>\n                    <Jumbotron  style={{ backgroundColor: 'white' }} >\n                        <h2 className=\"text-center\">\n                           Waiting 1 minute for users to join...\n                        </h2>\n                    </Jumbotron>\n                    {this.state.socket}\n                    <div className=\"text-center\">\n                        <i className=\"fa fa-refresh fa-spin fa-5x fa-fw\"></i>\n                    </div>\n                </Grid>\n            );\n        }\n        \n        return ( \n            <Grid fluid>\n                <div>\n                    <div>\n                        <Badge count={this.state.currentUsers} title=\"Current online users\"  style={{ backgroundColor: '#2ecc71', fontSize: '15px' }}>  \n                        <span className=\"glyphicon glyphicon-user\"  style={{ fontSize: '25px', }}></span>\n                    </Badge>\n                    </div>\n                </div>\n                <VirtualEdition userId={this.state.userId} gameId={this.state.gameId} game={this.state.game}/>\n            </Grid>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getLeaderboard } from '../utils/APIUtils';\nimport {Table, Grid} from 'react-bootstrap';\n\nclass GameLeaderboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: [],\n            points: [],\n        }\n    }\n\n\n    async componentDidMount() {\n        let request = await getLeaderboard();\n       \n        this.setState({\n            users: request[0],\n            points: request[1],\n        })\n    }\n\n\n    render() {\n        const tableView = [];   \n        let users = this.state.users;\n        let points = this.state.points;\n        users.forEach(function(item, index){\n            tableView.push(\n                <tr key={index}>\n                    <td>{index+1}</td>\n                    <td> <Link to={`/user/${item}`}>{item}</Link></td>\n                    <td>{Math.round(points[index])}</td>\n                </tr>\n                )\n          });\n\n        return (\n            <Grid>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Username</th>\n                            <th>Points</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {tableView}\n                    </tbody>\n            \t</Table>\n            </Grid>\n        );\n    }\n\n}\nexport default GameLeaderboard;\n","import React from 'react';\nimport {Route, Redirect} from \"react-router-dom\";\n\n\nconst PrivateRoute = ({ component: Component, authenticated, ...rest }) => (\n    <Route\n      {...rest}\n      render={props =>\n         authenticated != null ? (\n          <Component {...rest} {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n);\n\nexport default PrivateRoute","import React, { Component } from 'react';\nimport { Grid, Row, Col, Panel, PanelGroup, Glyphicon} from 'react-bootstrap';\nimport { Link} from 'react-router-dom';\nclass About extends Component {\n    \n    render() {\n        return (\n            <Grid fluid>\n\t\t\t    <Row>\n\t\t\t\t    <Col md={12}>\n                        <div className=\"text-center\">\n\t    \t\t\t\t\t<h1>Frequently Asked Questions <Glyphicon glyph=\"question-sign\" /></h1>\n\t\t\t\t\t    </div>\n\t\t\t\t    </Col>\n\t\t\t    </Row>\n\t\t\t    <Row>\t\t\t\t\n                    <Col md={12}>\n                        <PanelGroup accordion>\n                            <Panel eventKey=\"1\">\n                                <Panel.Heading>\n                                    <Panel.Title toggle>What is the <em>LdoD Archive</em>?</Panel.Title>\n                                </Panel.Heading>\n                                <Panel.Body collapsible>\n                                <p>The <em>LdoD Archive</em> is a collaborative digital archive of the <em>Book of Disquiet</em> by Fernando Pessoa. It contains images of the autograph documents, new transcriptions of those documents and also\n                                transcriptions of four editions of the work. \n                                <br></br>In addition to reading and comparing transcriptions, the <em>LdoD Archive</em> enables users to collaborate in creating virtual editions of the <em>Book of Disquiet</em>. It also includes a writing module which, in the future, will allow users to write variations based on fragments from the <em>Book</em>. \n                                Thus the <em>LdoD Archive</em> combines a representational principle with a simulation principle: the first is expressed through the representation of the history and processes of writing and editing the <em>Book</em>; the second is embodied in the fact that users are given the possibility of playing various roles in the literary process (reading, editing, writing), using the flexibility of the digital medium for experimenting with the\n                                <em>Book of Disquiet</em> as a literary machine.</p>\n                                </Panel.Body>\n                            </Panel>\n                            <Panel eventKey=\"2\">\n                                <Panel.Heading>\n                                    <Panel.Title toggle>What is the the LdoD Classification Game?</Panel.Title>\n                                </Panel.Heading>\n                                <Panel.Body collapsible>\n                                In the scope of a master's thesis developed at Instituto Superior Técnico that focuses in Crowdsourcing and Gamification in the Ldod Archive, the LdoD Classification game was created. \n                                <br></br>\n                                The game makes use of the LdoD Archive capabilities, which allows users to create new editions of the Book of Disquiet and share them with the other users.\n                                </Panel.Body>\n                            </Panel>\n                            <Panel eventKey=\"3\">\n                                <Panel.Heading>\n                                    <Panel.Title toggle>What do I have to do to start playing the LdoD Classification Game?</Panel.Title>\n                                </Panel.Heading>\n                                <Panel.Body collapsible>\n                                    In order to play the game you have firstly be a registered user of the <a href=\"https://ldod.uc.pt/signin\"><em>LdoD Archive</em></a>, after that you can play in games in which you are a member of the Virtual Edition that is associated with the game or game that are open to every user of the <em>Archive</em> .\n                                    Note that you also need to login on the game platform with your <em>LdoD Archive </em> credentials.\n                                </Panel.Body>\n                            </Panel>\n                            <Panel eventKey=\"4\">\n                                <Panel.Heading>\n                                    <Panel.Title toggle>How can I create a game for others to play?</Panel.Title>\n                                </Panel.Heading>\n                                <Panel.Body collapsible>\n                                    You must be a Manager of a Virtual Edition on the <em>LdoD Archive</em>. From the management area of a Virtual Edition you can create games and their settings (open to all users/only members; date and time of the game; small description of the game and which fragment to use in the game).\n                                </Panel.Body>\n                            </Panel>\n                            <Panel eventKey=\"5\">\n                                <Panel.Heading>\n                                    <Panel.Title toggle>What is the goal of the game?</Panel.Title>\n                                </Panel.Heading>\n                                <Panel.Body collapsible>\n                                    The overall objective of the game is to categorize fragments of Virtual Editions in a fun and entertaining way. The game is split into three main rounds explained bellow.\n                                </Panel.Body>\n                            </Panel>\n                            <Panel eventKey=\"6\">\n                                <Panel.Heading>\n                                    <Panel.Title toggle>What is Round 1 - Submit ?</Panel.Title>\n                                </Panel.Heading>\n                                <Panel.Body collapsible>\n                                In this round, your goal is to read and analyse the paragraph shown on the screen in the given time and submit a tag which you think is adequate to classify what you read.  \n                                </Panel.Body>\n                            </Panel>\n                            <Panel eventKey=\"7\">\n                                <Panel.Heading>\n                                    <Panel.Title toggle>What is Round 2 - Vote?</Panel.Title>\n                                </Panel.Heading>\n                                <Panel.Body collapsible>\n                                In this round, your goal is to vote in which of the tags suggested by the other game participants (and your own suggestion) is the best one. You can only vote once.\n                                </Panel.Body>\n                            </Panel>\n                            <Panel eventKey=\"8\">\n                                <Panel.Heading>\n                                    <Panel.Title toggle>What is Round 3 - Review?</Panel.Title>\n                                </Panel.Heading>\n                                <Panel.Body collapsible>\n                                This is the last stage of the game, you will have the fragment in full in your screen and the tags that had the most votes in the earlier rounds and you must vote on the best one, however now you can change your vote will the timer is active. But be careful, changing votes constantly makes you lose points. Check the Score question below.\n                                </Panel.Body>\n                            </Panel>\n                            <Panel eventKey=\"9\">\n                                <Panel.Heading>\n                                    <Panel.Title toggle>How is my score determined?</Panel.Title>\n                                </Panel.Heading>\n                                <Panel.Body collapsible>\n                                The score follows the following formula:\n                                    Score = s + s-RWT + v-RWT + s-GWT + v-GWT + c, where\n                                    <ul>\n                                        <li>s, every submitted tag = 1 point</li>\n                                        <li>s-RWT, you submitted a tag that won a round = 5 points </li>\n                                        <li>v-RWT, you voted on a tag that won a round = 2 points </li>\n                                        <li>s-GWT, you submitted the tag that won the <b>game</b> = 10 points </li>\n                                        <li>v-GWT, you voted on the tag that won the <b>game</b> = 5 points </li>\n                                        <li>c, for each vote change in the final round you <b>lose</b> 1 point </li>\n                                    </ul>\n                                </Panel.Body>\n                            </Panel>\n                        </PanelGroup>\n                        <h4>For more information regarding the <em>LdoD Archive</em> check <a href=\"https://ldod.uc.pt/about/faq\">here</a>. \n                        <br></br>\n                        Other questions regarding the game, please contact us in the <Link to=\"/feedback\">Feedback section</Link>.</h4>\n\t\t\t        </Col>\n                </Row>\n            </Grid>\n        );\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { Grid} from 'react-bootstrap';\n\n\nclass Feedback extends Component {\n    \n    render() {\n        return (\n            <Grid fluid>\n                <iframe title=\"form\" src=\"https://docs.google.com/forms/d/e/1FAIpQLSftMgc-GItkGym-mysl8_JpBoIQSU_iLfPV5UeroP0LsAZudQ/viewform?embedded=true\" width=\"640\" height=\"2408\" frameBorder=\"0\" marginHeight=\"0\" marginWidth=\"0\">A carregar...</iframe>\n            </Grid>\n        );\n    }\n}\n\nexport default Feedback;","import React, { Component } from 'react';\nimport { Route, withRouter, Link, Switch } from 'react-router-dom';\nimport { getCurrentUser,  getActiveGames } from '../utils/APIUtils';\nimport { ACCESS_TOKEN, LDOD_MESSAGE, FRAGMENTS_BASE_URL, INTER_BASE_URL, SITE_URL } from '../utils/Constants';\nimport AppContext from './AppContext';\nimport {Provider} from './/AppContext';\nimport Login from '../user/login/Login';\nimport Profile from '../user/profile/Profile';\nimport Header from '../common/Header';\nimport Game from '../game/Game';\nimport GameLeadeboard from '../game/GameLeaderboard';\nimport NotFound from '../common/NotFound';\nimport PrivateRoute from '../common/PrivateRoute';\nimport About from '../common/About';\nimport { notification } from 'antd';\nimport { Jumbotron, Button, Col, Grid, Row, ListGroup, ListGroupItem, Glyphicon} from 'react-bootstrap'; \nimport Feedback from '../common/Feedback';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            currentUser: null,\n            isAuthenticated: false,\n            isLoading: false,\n            activeGames: [],\n            enabled: false,\n        }\n\n        this.handleLogout = this.handleLogout.bind(this);\n        this.loadCurrentUser = this.loadCurrentUser.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.getAndSetupGames = this.getAndSetupGames.bind(this);\n\n        notification.config({\n            placement: 'topRight',\n            top: 80,\n            duration: 2,\n        });\n    }\n    \n    componentDidMount(){\n        //if(sessionStorage.getItem(ACCESS_TOKEN)){\n            this.loadCurrentUser();\n            this.getAndSetupGames()\n            setInterval(function () {\n                this.getAndSetupGames();\n            }.bind(this), 60000)\n        //}\n    }\n\n    // TODO: CHECK THIS DUE TO REFRESH and OLD TOKENS\n    componentWillUnmount() {\n        \n        //localStorage.clear();\n        //caches.delete(\"JSESSIONID\");\n    }\n\n    async loadCurrentUser() {\n        this.setState({\n            isLoading: true\n        });\n        getCurrentUser()\n            .then(response => {\n                localStorage.setItem(\"currentUser\", response.username);\n                \n                this.setState({\n                    currentUser: response,\n                    isAuthenticated: true,\n                });\n            }).catch(error => {\n                this.setState({\n                });\n            });\n    }\n\n\n    handleLogout() {\n        localStorage.removeItem(ACCESS_TOKEN);\n        localStorage.clear();\n        \n        this.setState({\n            currentUser: null,\n            isAuthenticated: false,\n        });\n        \n        notification.success({\n            message: LDOD_MESSAGE,\n            description: \"You're successfully logged out.\",\n        });\n\n        this.props.history.push(\"/\");\n    }\n    \n    async handleLogin() {\n        notification.success({\n            message: LDOD_MESSAGE,\n            description: \"You're successfully logged in.\",\n        });\n        this.props.history.push(\"/\");\n        await this.loadCurrentUser();\n        await this.getAndSetupGames();\n        return \n    }\n\n    async getAndSetupGames(){\n        if (localStorage.getItem(\"currentUser\") === null){\n            return;\n        }\n        let request = await getActiveGames(localStorage.getItem(\"currentUser\"));\n        var gameDate = request[0] != null ? new Date(request[0].dateTime) : null;\n        this.setState({\n            activeGames: request,\n            //game: request[0],\n            dateTime:  gameDate,\n            enabled: false,//temp\n            isLoading: false,\n        })\n        \n        if(request[0] == null){ return; }\n    \n        var dateItHappens = new Date(request[0].dateTime);\n        var millisTillOccurence = dateItHappens.getTime() - new Date().getTime();\n        \n        setTimeout(function () {\n            this.setState({enabled: true});\n            notification[\"info\"]({\n                message: LDOD_MESSAGE,\n                description: \"New game available!\",\n            });\n        }.bind(this), millisTillOccurence)\n    }\n    \n    render() {\n        var styles ={\n            fontFamily : 'Ubuntu',\n            backgroundColor: '#3498db'\n        }\n        let activeGames = this.state.activeGames;\n        const gamesView = [];\n        if(this.state.isAuthenticated){\n            activeGames.forEach((g, index) => {\n                var id = g.gameExternalId;\n                var gameDate = new Date(g.dateTime);\n                var options = { hour: 'numeric', minute: '2-digit' };\n                var date = new Date();\n                var available =  (gameDate.getHours() === date.getHours() && gameDate.getMinutes() === date.getMinutes() && gameDate.getDate() === date.getDate());\n                gamesView.push(\n                    <ListGroupItem key={index} bsStyle={available ? \"success\" : \"warning\"}>\n                            {available ? \n                            (<div><Link to={`/game/${id}`}><Glyphicon glyph=\"ok\" />{'\\u00A0'}<Button bsStyle=\"primary\">{'\\u00A0'}{g.virtualEditionTitle}:{g.virtualEditionInterDto.title}</Button></Link></div>) \n                            : \n                            (<div><Glyphicon glyph=\"lock\" /></div>)}\n                            {<div>{g.virtualEditionTitle}: <a href={SITE_URL + FRAGMENTS_BASE_URL+`${g.virtualEditionInterDto.fragmentId}` + INTER_BASE_URL + `${g.virtualEditionInterDto.urlId}`} target=\"_blank\">{'\\u00A0'}{g.virtualEditionInterDto.title}</a></div>}- {gameDate.toLocaleDateString()} {gameDate.toLocaleString(navigator.language, options)}\n                    </ListGroupItem>)\n            });\n        }\n    return (\n        <Grid fluid>\n            <AppContext>\n            <Provider value={{currentUser: this.state.currentUser, games: this.state.activeGames}}>  \n                {this.props.children}\n            <Header\n                isAuthenticated={this.state.isAuthenticated}\n                currentUser={this.state.currentUser}\n                onLogout={this.handleLogout}/>\n                <div>\n                    <Switch>\n                        <Route exact path=\"/\" render={() =>\n                        <div>\n                            <Jumbotron style={styles}>\n                                <h3 className=\"text-center\">Welcome to the LdoD Game powered by LdoD Archive</h3>\n                            </Jumbotron>\n                            <Row>\n                                <Col md={12} xs={4}>\n                                    <h4 className=\"text-center\">Games:</h4>\n                                    <ListGroup>\n                                        {gamesView}\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                        }>\n                        </Route>\n                        <Route path=\"/login\" render={(props) =>\n                        <div>\n                            <Login onLogin={this.handleLogin} {...props} />\n                        </div>}>\n                        </Route>\n                        <Route path=\"/about\" component={About}></Route>\n                        <PrivateRoute path=\"/user/:username\" authenticated={this.state.isAuthenticated} currentUser={this.state.currentUser}\n                        component={Profile}>\n                        </PrivateRoute>\n                        <PrivateRoute path=\"/game/:id\" authenticated={this.state.isAuthenticated} currentUser={this.state.currentUser}\n                        component={Game}>\n                        </PrivateRoute>\n                        <PrivateRoute path=\"/leaderboard\" authenticated={this.state.isAuthenticated} currentUser={this.state.currentUser}\n                        component={GameLeadeboard}>\n                        </PrivateRoute>\n                        <PrivateRoute path=\"/feedback\" authenticated={this.state.isAuthenticated} currentUser={this.state.currentUser}\n                        component={Feedback}>\n                        </PrivateRoute>\n                        <Route component={NotFound}></Route>\n                    </Switch>\n                </div>\n                </Provider>\n                </AppContext>\n             </Grid>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n    <Router basename={'classification-game'}>\n        <App />\n\n    </Router>,\n    document.getElementById('root')\n);"],"sourceRoot":""}