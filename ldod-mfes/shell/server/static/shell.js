import{Store as e}from"shared/store.js";import{parseHTML as n}from"shared/utils.js";const t=new e({language:"en",token:""},{storageName:"ldod-store",keys:["language","token"]});window.addEventListener("ldod-language",(({detail:e})=>t.setState(e)));const a=new CSSStyleSheet;a.replaceSync("div#overlay[aria-hidden='true'] {\n    display: none;\n    transition: opacity 300ms ease-in-out;\n    overflow: hidden;\n}\n\n.overlay-modal {\n    display: inherit;\n    background-color: rgba(0, 0, 0, 0.5);\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 1050;\n    outline: 0;\n}\n\n.lds-dual-ring {\n    border: none;\n    display: flex;\n    justify-content: center;\n    margin-top: 40vh;\n}\n\n.lds-dual-ring:after {\n    content: ' ';\n    display: block;\n    width: 64px;\n    height: 64px;\n    margin: 8px;\n    border-radius: 50%;\n    border: 6px solid #fff;\n    border-color: #fff transparent #fff transparent;\n    animation: lds-dual-ring 1.2s linear infinite;\n}\n\n@keyframes lds-dual-ring {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}"),window.html=String.raw;const o=new CSSStyleSheet;class d extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}).adoptedStyleSheets=[o]}static get observedAttributes(){}connectedCallback(){o.replaceSync(a),o.cssRules.length||(this.shadowRoot.adoptedStyleSheets=[a]),this.render(),this.addEventListener()}attributeChangedCallback(){}disconnectedCallback(){window.removeEventListener("ldod-loading",this.handleLoadingEvent)}render(){const e=n(html` <div>
        <div id="overlay" class="overlay-modal" aria-hidden="true">
          <div class="lds-dual-ring"></div>
        </div>
      </div>`);this.shadowRoot.appendChild(e)}addEventListener=()=>{window.addEventListener("ldod-loading",this.handleLoadingEvent)};handleLoadingEvent=()=>{console.log(this),this.shadowRoot.querySelector("#overlay").setAttribute("aria-hidden","false")}}customElements.define("ldod-loading",d);const r={pt:"LdoD: Esta página não existe...",en:"LdoD: Page not found...",es:"LdoD: Esta página no existe"},i=()=>document.body.querySelector("div#no-page.container"),s=()=>window.addEventListener("ldod-language",c),l=()=>window.removeEventListener("ldod-language",c),c=({detail:e})=>i().textContent=r[e.language];var g={path:"/not-found",mount:(e,t)=>{document.body.querySelector(t).appendChild((e=>n(html` <div id="no-page" class="container">${r[e]}</div>`))(e)),s()},unMount:()=>{l(),i().remove()}};const u=()=>t.getState().language,h=JSON.parse(document.querySelector("script#importmap").textContent).imports;delete h["shared/"],document.querySelector("ldod-navbar").setAttribute("language",u());const p=await Object.keys(h).reduce((async(e,n)=>{try{const t=(await import(n))?.default??"",a=t.path;a&&((await e)[a]=()=>t)}catch(e){console.error(e)}return await e}),Promise.resolve({}));p[g.path]=()=>g;const m=document.createElement("ldod-router");m.id="shell",m.language=u(),m.routes=p,document.getElementById("root").append(m);t.subscribe(((e,n)=>{e.language!==n.language&&(m.language=e.language)}));
