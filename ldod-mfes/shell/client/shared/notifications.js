import t from"@shared/bootstrap/toast-css.js";import e from"@shared/bootstrap/buttons-css.js";const s=new CSSStyleSheet;s.replaceSync(t+e+":host{display:block;padding:0 20px}.d-flex{display:flex!important;padding-left:1em;align-items:center;gap:1em}.alert-danger{--bs-alert-color: #842029;--bs-alert-bg: #f8d7da;--bs-alert-border-color: #f5c2c7}.alert-success{--bs-alert-color: #0f5132;--bs-alert-bg: #d1e7dd;--bs-alert-border-color: #badbcc}.toast{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Open Sans,Helvetica Neue,sans-serif;font-weight:400;--bs-toast-max-width: 75vh !important;color:var(--bs-alert-color);background-color:var(--bs-alert-bg);border:var(--bs-alert-border);min-width:300px}.btn-close-margin{margin:auto!important;margin-right:.5rem!important}\n");class o extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.adoptedStyleSheets=[s],this.toastHtml=t=>`\n        <div\n            class="toast fade alert-${t}"\n            role="alert"\n            aria-live="assertive"\n            aria-atomic="true"\n        >\n            <div class="d-flex">\n            ${"success"===t?'<span is="ldod-span-icon" icon="check" size="18px" fill="#0f5132"></span>':'<span is="ldod-span-icon" icon="triangle-exclamation" size="18px" fill="#842029"></span>'}\n            <div class="toast-body">\n                <slot name="toast-body"></slot>\n                </div>\n                <button\n                    type="button"\n                    class="btn-close btn-close-alert btn-close-margin"\n                ></button>\n            </div>\n        </div>\n`}get show(){return this.hasAttribute("show")}get theme(){return this.getAttribute("theme")||"primary"}get toast(){return this.shadowRoot.querySelector(".toast")}static get observedAttributes(){return["show"]}attributeChangedCallback(t,e,s){this.handleAttributeChange[t](e,s)}handleAttributeChange={show:()=>this.show&&this.showNotification()};connectedCallback(){this.addEventListener("pointerenter",this.clearTimeout),this.addEventListener("pointerleave",this.hideNotification)}render(){this.shadowRoot.innerHTML=this.toastHtml(this.theme),this.addEventListeners()}addEventListeners=()=>{this.shadowRoot.querySelector(".btn-close").addEventListener("click",this.close)};toggle=()=>this.toggleAttribute("show");clearTimeout=()=>{window.clearTimeout(this.timeout),this.timeout=null};showNotification=()=>{this.clearTimeout(),this.render(),this.toast.classList.add("show"),this.fadeTransition(),this.toggleAttribute("show",!1),this.hideNotification()};hideNotification=()=>{this.timeout=setTimeout((()=>{this.timeout&&this.close()}),3e3)};fadeTransition=(t=!1)=>{this.toast.classList.add("showing"),setTimeout((()=>{this.toast.classList.remove("showing"),t&&this.toast.classList.remove("show"),t&&this.remove()}),100)};close=()=>{this.fadeTransition(!0)}}!customElements.get("ldod-notification")&&customElements.define("ldod-notification",o);export{o as LdodNotification};
//# sourceMappingURL=notifications.js.map
