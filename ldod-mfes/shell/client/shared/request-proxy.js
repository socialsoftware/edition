import{getPartialStorage as t}from"@shared/store.js";import{ldodEventPublisher as e}from"@shared/ldod-events.js";import{navigateTo as r}from"@shared/router.js";const o=window.process?.apiHost||"http://localhost:8000/api",s=t=>e("loading",t),n=()=>e("logout"),a=t=>e("error",t||"Something went wrong");const c=Object.freeze({JSON:"application/json",FORM_DATA:"multipart/form-data"});class i{constructor(){if(i.instance)return i.instance;i.instance=this}get storageToken(){return t("ldod-store",["token"])?.token}async fetchRequest(t,e){try{const r=await fetch(t,e),o=await r.json();return s(!1),r.ok?o:(401===r.status?n():a(o?.message),Promise.reject(o||r))}catch(t){console.error("FETCH ERROR: ",t?.stack??t),a(),r("/"),s(!1)}}async request(t,{url:e,path:r,token:a,signal:i},u,h){s(!0);const p=a||this.storageToken;if(p||n(),h&&"object"!=typeof h)throw new Error("Data must be an Object");const d=function(t,e,r){const o=new Headers({Authorization:`Bearer ${e||""}`,"Accept-Encoding":"gzip"});return r===c.JSON&&o.set("Content-Type",r),{method:t,headers:o,token:e}}(t,p,u);return i&&(d.signal=i),h&&(d.body=h),await this.fetchRequest(e??o.concat(r),d)}async get(t){return await this.request("GET",t,c.JSON)}async post(t,e){return await this.request("POST",t,c.JSON,JSON.stringify(e))}async upload(t,e){return await this.request("POST",t,c.FORM_DATA,e)}}var u=Object.freeze(new i);export{u as default};
//# sourceMappingURL=request-proxy.js.map
