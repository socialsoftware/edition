import{getPartialStorage as e}from"@shared/store.js";import{ldodEventPublisher as t}from"@shared/ldod-events.js";import{navigateTo as r}from"@shared/router.js";const o=window.process?.apiHost||"http://localhost:8000/api",a=e=>t("loading",e),s=()=>t("logout"),n=e=>t("error",e||"Something went wrong"),d=()=>e("ldod-store",["token"])?.token,i=async(e,t)=>{try{const r=await fetch(e,t);if(401===r.status)return s(),Promise.reject(r);const o=await r.json();return r.ok?o:(n(o?.message),Promise.reject(o||r))}catch(e){console.error("FETCH ERROR: ",e?.stack??e),n(),r("/")}finally{a(!1)}},c=["get","post","put","delete"].reduce(((e,t)=>(e[t]=(e,r={},n,c)=>(async(e,t,r,n,c)=>{a(!0);const p={},h=n||d();if(h||s(),r&&"object"!=typeof r)throw new Error("Data must be an Object");return p.headers=new Headers,p.headers.append("Authorization",`Bearer ${h||""}`),p.headers.append("Content-Type","application/json"),p.headers.append("Accept-Encoding","gzip"),(t.includes("restricted")||t.includes("admin"))&&p.headers.append("Cache-Control","private"),p.method=e,c&&(p.signal=c),r&&(p.body=JSON.stringify(r)),await i(o.concat(t),p)})(t.toUpperCase(),e,r,n,c),e)),{}),p=async({url:e,body:t,method:r="POST",token:s,headers:n=[],signal:c})=>{a(!0);const p={},h=s||d();return p.headers=new Headers,h&&p.headers.set("Authorization",h),n.forEach((e=>Object.entries(e).forEach((([e,t])=>{p.headers.set(e,t)})))),p.method=r,c&&(p.signal=c),t&&(p.body=t),await i(o.concat(e),p)};export{c as fetcher,p as xmlFileFetcher};
//# sourceMappingURL=fetcher.js.map
