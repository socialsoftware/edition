version: '3.3'
services:
  db-edition:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: 'edition'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'darfo'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'darfo'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'darfo'

    networks:
      - backend

    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3307:3306'
    expose:
      # Opens port 3307 on the container
      - '3307'
      # Where our data will be persisted
    volumes:
      - edition-db:/var/lib/mysql



  docker-frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    image: docker-frontend:v1
    restart: on-failure
    depends_on:
      - db-edition
      - db-text
      - docker-text
      - db-user
      - docker-user
      - db-virtual
      - docker-virtual

    networks:
      - backend

    ports:
      - 8080:8080

    environment:
      dbAlias: jdbc:mysql://db-edition:3306/edition?useUnicode=true&amp;characterEncoding=UTF-8&amp;clobCharacterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull;useSSL=false
      # Database username and password
      dbUsername: 'darfo'
      dbPassword: 'darfo'

    volumes:
      - /opt/ldod/corpus/:/opt/ldod/corpus
      - /opt/ldod/corpus/files/:/opt/ldod/corpus/files/
      - /opt/ldod/corpus/stoplist-pt.txt:/opt/ldod/corpus/stoplist-pt.txt
      - /opt/ldod/inters/:/opt/ldod/inters/
      - /opt/ldod/facsimiles/:/opt/ldod/facsimiles/
      - /opt/ldod/encoding/:/opt/ldod/encoding/
      - /opt/ldod/export/:/opt/ldod/export/
      - /opt/ldod/indexer/:/opt/ldod/indexer/
      - /opt/ldod/tests/:/opt/ldod/tests/
      - /opt/ldod/social/aware/:/opt/ldod/social/aware/

  db-text:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: 'text'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'darfo'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'darfo'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'darfo'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3308:3306'
    networks:
      - backend

    expose:
      # Opens port 3307 on the container
      - '3308'
      # Where our data will be persisted
    volumes:
      - text-db:/var/lib/mysql


  docker-text:
    build:
      context: ./backend/text
      dockerfile: Dockerfile
    image: docker-text:v1
    restart: on-failure
    depends_on:
      - db-text
    networks:
      - backend
    ports:
      - 8081:8081

    environment:
      dbAlias: jdbc:mysql://db-text:3306/text?useUnicode=true&amp;characterEncoding=UTF-8&amp;clobCharacterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull;useSSL=false
        # Database username and password
      dbUsername: 'darfo'
      dbPassword: 'darfo'

    volumes:
        - /opt/ldod/corpus/:/opt/ldod/corpus/
        - /opt/ldod/corpus/files/:/opt/ldod/corpus/files/
        - /opt/ldod/corpus/stoplist-pt.txt:/opt/ldod/corpus/stoplist-pt.txt
        - /opt/ldod/inters/:/opt/ldod/inters/
        - /opt/ldod/facsimiles/:/opt/ldod/facsimiles/
        - /opt/ldod/encoding/:/opt/ldod/encoding/
        - /opt/ldod/export/:/opt/ldod/export/
        - /opt/ldod/indexer/:/opt/ldod/indexer/
        - /opt/ldod/tests/:/opt/ldod/tests/
        - /opt/ldod/social/aware/:/opt/ldod/social/aware/

  db-user:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: 'user'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'darfo'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'darfo'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'darfo'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3309:3306'
    networks:
      - backend

    expose:
      # Opens port 3309 on the container
      - '3309'
        # Where our data will be persisted
    volumes:
      - user-db:/var/lib/mysql

  docker-user:
    build:
      context: ./backend/user
      dockerfile: Dockerfile
    image: docker-user:v1
    restart: on-failure
    depends_on:
      - db-user
    ports:
      - 8082:8082

    networks:
      - backend

    environment:
      dbAlias: jdbc:mysql://db-user:3306/user?useUnicode=true&amp;characterEncoding=UTF-8&amp;clobCharacterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull;useSSL=false
        # Database username and password
      dbUsername: 'darfo'
      dbPassword: 'darfo'

    volumes:
      - /opt/ldod/corpus/:/opt/ldod/corpus/
      - /opt/ldod/corpus/files/:/opt/ldod/corpus/files/
      - /opt/ldod/corpus/stoplist-pt.txt:/opt/ldod/corpus/stoplist-pt.txt
      - /opt/ldod/inters/:/opt/ldod/inters/
      - /opt/ldod/facsimiles/:/opt/ldod/facsimiles/
      - /opt/ldod/encoding/:/opt/ldod/encoding/
      - /opt/ldod/export/:/opt/ldod/export/
      - /opt/ldod/indexer/:/opt/ldod/indexer/
      - /opt/ldod/tests/:/opt/ldod/tests/
      - /opt/ldod/social/aware/:/opt/ldod/social/aware/


  db-virtual:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: 'virtual1'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'darfo'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'darfo'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'darfo'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3310:3306'
    networks:
      - backend

    expose:
      # Opens port 3309 on the container
      - '3310'
        # Where our data will be persisted
    volumes:
      - virtual-db:/var/lib/mysql


  docker-virtual:
    build:
      context: ./backend/virtual
      dockerfile: Dockerfile
    image: docker-virtual:v1
    restart: on-failure
    depends_on:
      - db-virtual
    ports:
      - 8083:8083

    networks:
      - backend

    environment:
      dbAlias: jdbc:mysql://db-virtual:3306/virtual1?useUnicode=true&amp;characterEncoding=UTF-8&amp;clobCharacterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull;useSSL=false
      # Database username and password
      dbUsername: 'darfo'
      dbPassword: 'darfo'

    volumes:
      - /opt/ldod/corpus/:/opt/ldod/corpus/
      - /opt/ldod/corpus/files/:/opt/ldod/corpus/files/
      - /opt/ldod/corpus/stoplist-pt.txt:/opt/ldod/corpus/stoplist-pt.txt
      - /opt/ldod/inters/:/opt/ldod/inters/
      - /opt/ldod/facsimiles/:/opt/ldod/facsimiles/
      - /opt/ldod/encoding/:/opt/ldod/encoding/
      - /opt/ldod/export/:/opt/ldod/export/
      - /opt/ldod/indexer/:/opt/ldod/indexer/
      - /opt/ldod/tests/:/opt/ldod/tests/
      - /opt/ldod/social/aware/:/opt/ldod/social/aware/

  db-recommendation:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: 'recommendation'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'darfo'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'darfo'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'darfo'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3311:3306'
    networks:
      - backend

    expose:
      # Opens port 3309 on the container
      - '3311'
      # Where our data will be persisted
    volumes:
      - recommendation-db:/var/lib/mysql


  docker-recommendation:
     build:
       context: ./backend/recommendation
       dockerfile: Dockerfile
     image: docker-recommendation:v1
     restart: on-failure
     depends_on:
        - db-recommendation
     ports:
        - 8084:8084

     networks:
        - backend

     environment:
       dbAlias: jdbc:mysql://db-recommendation:3306/recommendation?useUnicode=true&amp;characterEncoding=UTF-8&amp;clobCharacterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull;useSSL=false
        # Database username and password
       dbUsername: 'darfo'
       dbPassword: 'darfo'

     volumes:
        - /opt/ldod/corpus/:/opt/ldod/corpus/
        - /opt/ldod/corpus/files/:/opt/ldod/corpus/files/
        - /opt/ldod/corpus/stoplist-pt.txt:/opt/ldod/corpus/stoplist-pt.txt
        - /opt/ldod/inters/:/opt/ldod/inters/
        - /opt/ldod/facsimiles/:/opt/ldod/facsimiles/
        - /opt/ldod/encoding/:/opt/ldod/encoding/
        - /opt/ldod/export/:/opt/ldod/export/
        - /opt/ldod/indexer/:/opt/ldod/indexer/
        - /opt/ldod/tests/:/opt/ldod/tests/
        - /opt/ldod/social/aware/:/opt/ldod/social/aware/

  db-game:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: 'game'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'darfo'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'darfo'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'darfo'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3312:3306'
    networks:
      - backend

    expose:
      # Opens port 3309 on the container
      - '3312'
      # Where our data will be persisted
    volumes:
      - game-db:/var/lib/mysql


  docker-game:
    build:
      context: ./backend/game
      dockerfile: Dockerfile
    image: docker-game:v1
    restart: on-failure
    depends_on:
      - db-game
    ports:
      - 8085:8085

    networks:
      - backend

    environment:
      dbAlias: jdbc:mysql://db-game:3306/game?useUnicode=true&amp;characterEncoding=UTF-8&amp;clobCharacterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull;useSSL=false
      # Database username and password
      dbUsername: 'darfo'
      dbPassword: 'darfo'

    volumes:
      - /opt/ldod/corpus/:/opt/ldod/corpus/
      - /opt/ldod/corpus/files/:/opt/ldod/corpus/files/
      - /opt/ldod/corpus/stoplist-pt.txt:/opt/ldod/corpus/stoplist-pt.txt
      - /opt/ldod/inters/:/opt/ldod/inters/
      - /opt/ldod/facsimiles/:/opt/ldod/facsimiles/
      - /opt/ldod/encoding/:/opt/ldod/encoding/
      - /opt/ldod/export/:/opt/ldod/export/
      - /opt/ldod/indexer/:/opt/ldod/indexer/
      - /opt/ldod/tests/:/opt/ldod/tests/
      - /opt/ldod/social/aware/:/opt/ldod/social/aware/

  docker-search:
    build:
      context: ./backend/search
      dockerfile: Dockerfile
    image: docker-search:v1
    restart: on-failure

    ports:
      - 8086:8086

    networks:
      - backend

    volumes:
      - /opt/ldod/corpus/:/opt/ldod/corpus/
      - /opt/ldod/corpus/files/:/opt/ldod/corpus/files/
      - /opt/ldod/corpus/stoplist-pt.txt:/opt/ldod/corpus/stoplist-pt.txt
      - /opt/ldod/inters/:/opt/ldod/inters/
      - /opt/ldod/facsimiles/:/opt/ldod/facsimiles/
      - /opt/ldod/encoding/:/opt/ldod/encoding/
      - /opt/ldod/export/:/opt/ldod/export/
      - /opt/ldod/indexer/:/opt/ldod/indexer/
      - /opt/ldod/tests/:/opt/ldod/tests/
      - /opt/ldod/social/aware/:/opt/ldod/social/aware/

  docker-visual:
    build:
      context: ./backend/visual
      dockerfile: Dockerfile
    image: docker-visual:v1
    restart: on-failure

    ports:
      - 8087:8087

    networks:
      - backend

    volumes:
      - /opt/ldod/corpus/:/opt/ldod/corpus/
      - /opt/ldod/corpus/files/:/opt/ldod/corpus/files/
      - /opt/ldod/corpus/stoplist-pt.txt:/opt/ldod/corpus/stoplist-pt.txt
      - /opt/ldod/inters/:/opt/ldod/inters/
      - /opt/ldod/facsimiles/:/opt/ldod/facsimiles/
      - /opt/ldod/encoding/:/opt/ldod/encoding/
      - /opt/ldod/export/:/opt/ldod/export/
      - /opt/ldod/indexer/:/opt/ldod/indexer/
      - /opt/ldod/tests/:/opt/ldod/tests/
      - /opt/ldod/social/aware/:/opt/ldod/social/aware/

  activemq:
    image: rmohr/activemq
    restart: on-failure
    networks:
      - backend
    ports:
    - 61616:61616
    - 8161:8161

networks:
  backend:
    driver: bridge

# Names our volume
volumes:
  edition-db:
    driver: local
  text-db:
    driver: local
  user-db:
    driver: local
  virtual-db:
    driver: local
  game-db:
    driver: local
  recommendation-db:
    driver: local
