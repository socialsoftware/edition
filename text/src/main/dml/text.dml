package pt.ist.socialsoftware.edition.text.domain;

enum LdoDDate.DateType as DateType;
enum Fragment.PrecisionType as PrecisionType;
enum Source.SourceType as SourceType;
enum ManuscriptSource.Medium as Medium;
enum ManuscriptSource.Form as Form;
enum ManuscriptSource.Material as Material;
enum SpaceText.SpaceDim as SpaceDim;
enum SpaceText.SpaceUnit as SpaceUnit;
enum Rend.Rendition as Rendition;
enum AddText.Place as Place;
enum DelText.HowDel as HowDel;
enum TextPortion.VariationType as VariationType;
enum GapText.GapUnit as GapUnit;
enum GapText.GapReason as GapReason;
enum UnclearText.UnclearReason as UnclearReason;
enum AltText.AltMode as AltMode;
enum NoteText.NoteType as NoteType;
enum RefText.RefType as RefType;


class TextModule {
}

relation DomainRootHasTextModule  {
    .pt.ist.fenixframework.DomainRoot playsRole root {
    		multiplicity 1..1;
    }
    TextModule playsRole textModule {
        multiplicity 0..1;
    }
}

class LdoDDate {
	LocalDate date;
	DateType type;
	PrecisionType precision;
}

class ScholarEdition {
    String xmlId;
	String title;
	LocalDate date;
	String acronym;
	Boolean pub;
}

class ExpertEdition extends ScholarEdition {
	String author;
	String editor;
}

class NullEdition extends ScholarEdition;

relation TextModule {
	TextModule playsRole textModule4Expert {multiplicity 1..1;}
	ExpertEdition playsRole expertEditions {multiplicity 0..*;}
}

relation TextModuleHasNullEdition {
	TextModule playsRole textModule4NullEdition {multiplicity 1..1;}
	NullEdition playsRole nullEdition {multiplicity 0..1;}
}

class Heteronym {
	String xmlId;
	String name;
}

class NullHeteronym extends Heteronym;

relation TextHasHeteronyms {
	TextModule playsRole textModule {multiplicity 1..1;}
	Heteronym playsRole heteronyms {multiplicity 0..*;}
}

class Fragment {
	String xmlId;
	String title;
}

relation TextHasFragments {
	TextModule playsRole textModule {multiplicity 1..1;}
	Fragment playsRole fragments {multiplicity 0..*;}
}

class ScholarInter {
    String xmlId;
    int numAnnexNotes;
}

class SourceInter extends ScholarInter;

relation ScholarInterHasDate {
	ScholarInter playsRole scholarInter {multiplicity 0..1;}
	LdoDDate playsRole ldoDDate {multiplicity 0..1;}
}

relation FragmentHasScholarInters {
	Fragment playsRole fragment {multiplicity 1..1;}
	ScholarInter playsRole scholarInter {multiplicity 0..*;}
}

relation ScholarInterAttributesHeteronym {
	ScholarInter playsRole scholarInter {multiplicity 0..*;}
	Heteronym playsRole heteronym {multiplicity 0..1;}
}

class AnnexNote {
	int number;
}

relation ScholarInterHasAnnexNote {
	ScholarInter playsRole scholarInter {multiplicity 1..1;}
	AnnexNote playsRole annexNote {multiplicity 0..*;}
}

class ExpertEditionInter extends ScholarInter {
	String title;
	String volume;
	int number;
	String subNumber;
	int startPage;
	int endPage;
	String notes;
}



relation ExpertEditionHasExpertEditionInters {
	ExpertEdition playsRole expertEdition {multiplicity 1..1;}
	ExpertEditionInter playsRole expertEditionInters {multiplicity 0..*;}
}

class Source {
	String xmlId;
	SourceType type;
	String settlement;
	String repository;
	String idno;
	String altIdentifier;
}

relation FragmentHasSources {
	Fragment playsRole fragment {multiplicity 1..1;}
	Source playsRole sources {multiplicity 0..*;}
}

relation SourceHasSourceInters {
	Source playsRole source {multiplicity 1..1;}
	SourceInter playsRole sourceInters {multiplicity 0..*;}
}

relation SourceHasDate {
	Source playsRole source {multiplicity 0..1;}
	LdoDDate playsRole ldoDDate {multiplicity 0..1;}
}

relation SourceHasHeteronym {
	Source playsRole source {multiplicity 0..*;}
	Heteronym playsRole heteronym {multiplicity 0..1;}
}

class ManuscriptSource extends Source {
	Form form;
	Material material;
	int columns;
	Boolean hasLdoDLabel;
	String notes;
}

class Dimensions {
	float height;
	float width;
	int position;
}

relation ManuscriptSourceHasDimensions {
	ManuscriptSource playsRole manuscriptSource {multiplicity 1..1;}
	Dimensions playsRole dimensions {multiplicity 0..*;}
}

class PhysNote {
	Medium medium;
	String note;
}

class HandNote extends PhysNote;

class TypeNote extends PhysNote;

relation ManuscriptSourceHasHandNote {
	ManuscriptSource playsRole manuscript {multiplicity 1..1;}
	HandNote playsRole handNote {multiplicity 0..*;}
}

relation ManuscriptSourceHasTypeNote {
	ManuscriptSource playsRole manuscript {multiplicity 1..1;}
	TypeNote playsRole typeNote {multiplicity 0..*;}
}

class PrintedSource extends Source {
	String title;
	String journal;
	String issue;
	String pubPlace;
	int startPage;
	int endPage;
}

class Facsimile {
	String xmlId;
}

relation SourceHasFacsimile {
	Source playsRole source {multiplicity 1..1;}
	Facsimile playsRole facsimile {multiplicity 0..1;}
}

class Surface {
	String xmlId;
	String graphic;
}

relation FacsimileHasSurface {
	Facsimile playsRole facsimile {multiplicity 0..1;}
	Surface playsRole firstSurface {multiplicity 0..1;}
}

relation SurfaceNextSurface {
	Surface playsRole next {multiplicity 0..1;}
	Surface playsRole prev {multiplicity 0..1;}
}



class TextPortion {
	String xmlId;
}

relation FragmentHasTextPortion {
	Fragment playsRole fragment {multiplicity 0..1;}
	TextPortion playsRole textPortion {multiplicity 0..1;}
}

relation PhysNoteRefersTextPortion {
	PhysNote playsRole physNote {multiplicity 0..*;}
	TextPortion playsRole textPortion {multiplicity 0..*;}
}

class Rend {
	Rendition rend;
}

relation TextPortionHasRend {
	TextPortion playsRole text {multiplicity 0..1;}
	Rend playsRole rend {multiplicity 0..*;}
}

class RdgText extends TextPortion {
	VariationType type;
}

relation TextPortionHasNextTextPortion {
	TextPortion playsRole prevText {multiplicity 0..1;}
	TextPortion playsRole nextText {multiplicity 0..1;}
}

relation TextPortionContainsTextPortion {
	TextPortion playsRole childText {multiplicity 0..*;}
	TextPortion playsRole parentText {multiplicity 0..1;}
}

relation TextPortionContainsFirstTextPortion {
	TextPortion playsRole firstChildText {multiplicity 0..1;}
	TextPortion playsRole parentOfFirstText {multiplicity 0..1;}
}

relation TextPortionContainsLastTextPortion {
	TextPortion playsRole lastChildText {multiplicity 0..1;}
	TextPortion playsRole parentOfLastText {multiplicity 0..1;}
}

class RdgGrpText extends TextPortion {
  VariationType type;
}

class AppText extends TextPortion {
  VariationType type;
}

relation ScholarInterHasRdgTexts {
	ScholarInter playsRole scholarInter {multiplicity 0..*;}
	RdgText playsRole rdg {multiplicity 0..*;}
}

class SimpleText extends TextPortion {
	String value;
}

class SegText extends TextPortion;

class AltText extends TextPortion {
	AltMode mode;
}

class AltTextWeight {
	double weight;
}

relation AltTextHasAltTextWeight {
	AltText playsRole altText {multiplicity 0..1;}
	AltTextWeight playsRole altTextWeight {multiplicity 0..*;}
}


relation AltTexWeightHasSegText {
	AltTextWeight playsRole altTextWeight {multiplicity 0..1;}
	SegText playsRole segText {multiplicity 0..1;}
}

class LbText extends TextPortion {
	Boolean breakWord;
	Boolean hyphenated;
}

relation LbTextHasScholarInters {
	LbText playsRole lbText {multiplicity 0..*;}
	ScholarInter playsRole scholarInter {multiplicity 0..*;}
}

class PbText extends TextPortion {
	int order;
}

relation PbTextHasScholarInters {
	PbText playsRole pbText {multiplicity 0..*;}
	ScholarInter playsRole scholarInter {multiplicity 0..*;}
}

relation PbTextSurface {
	PbText playsRole pbText {multiplicity 0..*;}
	Surface playsRole surface {multiplicity 0..1;}
}

class SpaceText extends TextPortion {
	SpaceDim dim;
	int quantity;
	SpaceUnit unit;
}

class ParagraphText extends TextPortion {
}

class AddText extends TextPortion {
	Place place;
}

class DelText extends TextPortion {
	HowDel how;
}

class SubstText extends TextPortion {
}

class GapText extends TextPortion {
	GapReason reason;
	GapUnit unit;
	int extent;
}

class UnclearText extends TextPortion {
	UnclearReason reason;
}

class NoteText extends TextPortion {
	NoteType type;
}

relation AnnexNoteHasTextNote {
	AnnexNote playsRole annexNote {multiplicity 0..*;}
	NoteText playsRole noteText {multiplicity 1..1;}
}

class RefText extends TextPortion {
	String target;
	RefType type;
}

relation RefText2Surface {
	Surface playsRole surface {multiplicity 0..1;}
	RefText playsRole refText {multiplicity 0..*;}
}

relation RefText2ScholarInter {
	ScholarInter playsRole scholarInter {multiplicity 0..1;}
	RefText playsRole refText {multiplicity 0..*;}
}

relation RefText2Fragment {
	Fragment playsRole refFrag {multiplicity 0..1;}
	RefText playsRole refText {multiplicity 0..*;}
}

class Citation {
	String sourceLink;
	String date;
	String fragText;
}



relation FragmentHasCitations {
	Citation playsRole citation {multiplicity 0..*;}
	Fragment playsRole fragment {multiplicity 1..1;}
}

class InfoRange {
	String start;
  	int startOffset;
  	String end;
  	int endOffset;
  	String quote;
	String text;
}

relation CitationHasInfoRanges {
	Citation playsRole citation {multiplicity 1..1;}
	InfoRange playsRole infoRange {multiplicity 0..*;}
}

relation InfoRangeHasScholarInter {
	InfoRange playsRole infoRange {multiplicity 0..*;}
	ScholarInter playsRole scholarInter {multiplicity 1..1;}
}

